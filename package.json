{
  "private": true,
  "version": "0.11.21",
  "name": "vscode-kanata",
  "displayName": "Kanata Configuration Language",
  "author": "rszyma",
  "publisher": "rszyma",
  "icon": "assets/kanata_icon.png",
  "description": "Language support for kanata configuration files",
  "keywords": [
    "kanata",
    "keyboard",
    "lsp"
  ],
  "categories": [
    "Programming Languages",
    "Other",
    "Formatters"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/rszyma/vscode-kanata"
  },
  "license": "LGPL-3.0",
  "engines": {
    "node": "^20.12.2",
    "vscode": "^1.80.0"
  },
  "main": "./out/client.js",
  "activationEvents": [
    "workspaceContains:**/*.kbd"
  ],
  "capabilities": {
    "virtualWorkspaces": {
      "supported": true
    },
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "contributes": {
    "languages": [
      {
        "id": "kanata",
        "aliases": [
          "Kanata",
          "kanata"
        ],
        "extensions": [
          ".kbd"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "kanata",
        "scopeName": "source.kanata",
        "path": "./syntaxes/kanata.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "vscode-kanata.setSetCurrentFileAsMain",
        "category": "Kanata",
        "title": "Set current file as main"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Kanata",
      "properties": {
        "vscode-kanata.includesAndWorkspaces": {
          "type": "string",
          "enum": [
            "single",
            "workspace"
          ],
          "markdownEnumDescriptions": [
            "Every kanata file in the workspace will be treated as main config file. `include` blocks can't be correctly analyzed if this option is selected.",
            "Only a single, selected file (by default `kanata.kbd`) will be treated as main file. Other files will not be be analyzed for errors, unless the main file includes them. Selecting this option enables support for `include` blocks."
          ],
          "default": "single",
          "markdownDescription": "Controls how to treat multiple kanata configuration files in one workspace."
        },
        "vscode-kanata.mainConfigFile": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\-\\.]+$",
          "patternErrorMessage": "Main config filename must be a file located in the workspace root",
          "default": "kanata.kbd",
          "markdownDescription": "Main config filename. This setting applies only if the `includesAndWorkspaces` is set to `workspace`"
        },
        "vscode-kanata.localKeysVariant": {
          "type": "string",
          "enum": [
            "deflocalkeys-win",
            "deflocalkeys-wintercept",
            "deflocalkeys-winiov2",
            "deflocalkeys-linux",
            "deflocalkeys-macos"
          ],
          "default": "auto",
          "markdownDescription": "Select which localkeys variant to use."
        },
        "vscode-kanata.format.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable formatting"
        },
        "vscode-kanata.format.useDefsrcLayoutOnDeflayers": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Formatting applies spacial layout of `defsrc` to all `deflayer`s."
        },
        "vscode-kanata.environmentVariables": {
          "type": "object",
          "default": {},
          "additionalProperties": {
            "type": "string"
          },
          "markdownDescription": "Environment variables to pass to kanata parser to use in `defaliasenvcond`."
        },
        "vscode-kanata.dimInactiveConfigItems": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Gray-out configuration items that are not applicable with the current settings (`deflocalkeys-*`, `defaliasenvcond`, `platform`)"
        }
      }
    }
  },
  "scripts": {
    "package": "vsce package --yarn --githubBranch main --out kanata.vsix",
    "publish": "vsce publish --yarn --githubBranch main --packagePath kanata.vsix",
    "typecheck": "tsc --noEmit",
    "fmtwrite": "prettier --write 'client/**/*.ts' 'server/**/*.ts' 'test/**/*.ts'",
    "fmtcheck": "prettier --check 'client/**/*.ts' 'server/**/*.ts' 'test/**/*.ts'",
    "test": "tsc --build test && yarn esbuild-all && node ./out/test/src/runTest.js",
    "esbuild-client": "esbuild client=./client/src --bundle --outdir=out --external:vscode --format=cjs --platform=node",
    "esbuild-server": "esbuild server=./server/src --bundle --outdir=out --external:vscode --format=cjs --platform=node",
    "esbuild-all": "yarn esbuild-server --sourcemap && yarn esbuild-client --sourcemap",
    "vscode:prepublish": "yarn esbuild-server --minify && yarn esbuild-client --minify"
  },
  "dependencies": {
    "vscode-languageclient": "^8.1.0",
    "vscode-languageserver": "^8.1.0"
  },
  "devDependencies": {
    "@types/node": "^20.13.0",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.20.0",
    "@typescript-eslint/parser": "^6.20.0",
    "@vscode/test-electron": "^2.3.4",
    "@vscode/vsce": "^2.20.0",
    "esbuild": "0.18.17",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "semver": "^7.5.4",
    "typescript": "^5.3.3"
  }
}