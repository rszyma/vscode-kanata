{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "kanata",
    "scopeName": "source.kanata",
    "foldingStartMarker": "\\(",
    "foldingStopMarker": "\\)",
    "patterns": [
        {
            "match": "(;;).*$\\n?",
            "name": "comment.line.semicolon.kanata",
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.kanata"
                }
            }
        },
        {
            "begin": "#\\|",
            "end": "\\|#",
            "name": "comment.block.kanata"
        },
        {
            "_description": "top-level blocks",
            "match": "(?:\\(\\s*)(defcfg|defsrc|defalias|deflayer|defvar|deffakekeys|defvirtualkeys|defseq|defchords|defchordsv2|defaliasenvcond|defoverrides|deflocalkeys-linux|deflocalkeys-win|deflocalkeys-wintercept|deflocalkeys-macos|deflocalkeys-winiov2|include|deftemplate|deflayermap|platform|defzippy-experimental|environment)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "keyword.control.kanata"
                }
            }
        },
        {
            "_description": "template expand",
            "match": "(?:^|\\s|[()])(template-expand|t!)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "entity.name.class.kanata"
                }
            }
        },
        {
            "_description": "defcfg options",
            "match": "(?:^|\\s|[()])(sequence-timeout|sequence-input-mode|linux-dev|linux-dev-names-include|linux-dev-names-exclude|linux-unicode-u-code|linux-unicode-termination|linux-x11-repeat-delay-rate|windows-altgr|windows-interception-mouse-hwid|macos-dev-names-include|process-unmapped-keys|block-unmapped-keys|danger-enable-cmd|sequence-backtrack-modcancel|log-layer-changes|delegate-to-first-layer|linux-continue-if-no-devs-found|movemouse-inherit-accel-state|movemouse-smooth-diagonals|dynamic-macro-max-presses|concurrent-tap-hold|windows-interception-keyboard-hwids|rapid-event-delay|dynamic-macro-replay-delay-behaviour|transparent-key-resolution|alias-to-trigger-on-load|tray-icon|icon-match-layer-name|tooltip-layer-changes|tooltip-show-blank|tooltip-duration|tooltip-size|notify-cfg-reload|notify-cfg-reload-silent|notify-error|linux-device-detect-mode|linux-use-trackpoint-property|linux-output-device-bus-type|override-release-on-activation)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "constant.language.kanata"
                }
            }
        },
        {
            "_description": "defcfg constants",
            "match": "(?:^|\\s|[()])(true|yes|false|no)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "constant.other.boolean.kanata"
                }
            }
        },
        {
            "_description": "atom actions",
            "match": "(?:^|\\s|[()])(XX|lrld|lrld-next|lrnx|lrld-prev|lrld-num|lrld-file|lrpv|sldr|mlft|mouseleft|mrgt|mouseright|mmid|mousemid|mfwd|mouseforward|mbck|mousebackward|mltp|mousetapleft|mrtp|mousetapright|mmtp|mousetapmid|mftp|mousetapforward|mbtp|mousetapbackward|rpt|rpt-key|rpt-any|repeat|dynamic-macro-record-stop|mwu|mwd|mwl|mwr|mousewheelup|mousewheeldown|mousewheelleft|mousewheelright)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "constant.language.kanata"
                }
            }
        },
        {
            "_description": "list actions",
            "match": "(?:^|\\s|[()])(layer-switch|layer-toggle|layer-while-held|tap-hold|tap-hold-press|tap-hold-release|tap-hold-press-timeout|tap-hold-release-timeout|tap-hold-release-keys|tap-hold-except-keys|multi|macro|macro-repeat|macro-release-cancel|macro-repeat-release-cancel|macro-cancel-on-press|macro-repeat-cancel-on-press|macro-release-cancel-and-cancel-on-press|macro-repeat-release-cancel-and-cancel-on-press|unicode|one-shot|one-shot-press|one-shot-release|one-shot-press-pcancel|one-shot-release-pcancel|tap-dance|tap-dance-eager|chord|release-key|release-layer|on-press|on-release|on-idle|hold-for-duration|mwheel-up|mwheel-down|mwheel-left|mwheel-right|movemouse-up|movemouse-down|movemouse-left|movemouse-right|movemouse-accel-up|movemouse-accel-down|movemouse-accel-left|movemouse-accel-right|movemouse-speed|setmouse|dynamic-macro-record|dynamic-macro-play|arbitrary-code|cmd|cmd-output-keys|cmd-log|fork|caps-word|caps-word-custom|caps-word-toggle|caps-word-custom-toggle|dynamic-macro-record-stop-truncate|switch|sequence|unmod|unshift|lrld-num|one-shot-pause-processing|hold-for-duration)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "entity.name.function.kanata"
                }
            }
        },
        {
            "_description": "virtualkeys/fakekeys key actions",
            "match": "(?:^|\\s|[()])(tap-virtualkey|tap-vkey|press-virtualkey|press-vkey|release-virtualkey|release-vkey|toggle-virtualkey|toggle-vkey)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "constant.language.kanata"
                }
            }
        },
        {
            "_description": "special atom actions/keywords within switch",
            "_note": "also there should be a 'break' keyword, but it's also a key",
            "match": "(?:^|\\s|[()])(fallthrough|virtual|real)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "constant.language.kanata"
                }
            }
        },
        {
            "_description": "special functions within switch",
            "match": "(?:^|\\s|[()])(not|or|and|key-history|key-timing|input)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "entity.name.function.kanata"
                }
            }
        },
        {
            "_description": "special functions within defvar",
            "match": "(?:^|\\s|[()])(concat)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "entity.name.function.kanata"
                }
            }
        },
        {
            "_description": "special keywords within multi",
            "match": "(?:^|\\s|[()])(reverse-release-order)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "keyword.control.kanata"
                }
            }
        },
        {
            "_description": "special functions within deftemplate",
            "match": "(?:^|\\s|[()])(concat)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "entity.name.function.kanata"
                }
            }
        },
        {
            "_description": "special statements within deftemplate",
            "match": "(?:^|\\s|[()])(if-equal|if-not-equal|if-in-list|if-not-in-list)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "keyword.control.kanata"
                }
            }
        },
        {
            "_description": "special keywords within defchordsv2",
            "match": "(?:^|\\s|[()])(all-released|first-release)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "keyword.control.kanata"
                }
            }
        },
        {
            "_description": "special statements within defzippy",
            "match": "(?:^|\\s|[()])(on-first-press-chord-deadline|idle-reactivate-time|smart-space|smart-space-punctuation)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "keyword.control.kanata"
                }
            }
        },
        {
            "_description": "keys",
            "match": "(?:^|\\s|[()])(\\\\|\\{|\\}|'|\\/|\\.|,|-|=|\\[|\\]|;|grv|grave|1|2|3|4|5|6|7|8|9|0|min|eql|bspc|bks|tab|q|w|e|r|t|y|u|i|o|p|lbrc|rbrc|bksl|yen|Â¥|caps|a|s|d|f|g|h|j|k|l|scln|apo|apos|ret|return|ent|enter|lshift|lshft|lsft|shft|sft|z|x|c|v|b|n|m|comm|kp=|clr|kp0|kp1|kp2|kp3|kp4|kp5|kp6|kp7|kp8|kp9|kprt|kp\\/|kp\\+|kp\\*|kp-|kp\\.|ssrq|sys|102d|lsgt|nubs|nonusbslash|scrlck|slck|pause|break|brk|wkup|esc|rshift|rshft|rsft|lctrl|lctl|ctl|lalt|alt|spc|ralt|comp|cmps|cmp|menu|apps|lmeta|lmet|met|rmeta|rmet|rctrl|rctl|del|ins|bck|fwd|pgup|pgdn|up|down|lft|left|rght|right|home|end|nlck|nlk|mute|volu|voldwn|vold|brup|bru|brdown|brdwn|brdn|blup|bldn|next|pp|prev|f1|f2|f3|f4|f5|f6|f7|f8|f9|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f20|f21|f22|f23|f24|kana|katakana|katakanahiragana|hiragana|cnv|conv|henk|hnk|henkan|ncnv|mhnk|muhenkan|ro|prtsc|prnt|mlft|mouseleft|mrgt|mouseright|mmid|mousemid|mfwd|mouseforward|mbck|mousebackward|hmpg|homepage|mdia|media|mail|email|calc|plyr|player|powr|power|zzz|sleep|Backquote|Digit1|Digit2|Digit3|Digit4|Digit5|Digit6|Digit7|Digit8|Digit9|Digit0|Minus|Equal|Backspace|Tab|KeyQ|KeyW|KeyE|KeyR|KeyT|KeyY|KeyU|KeyI|KeyO|KeyP|BracketLeft|BracketRight|CapsLock|KeyA|KeyS|KeyD|KeyF|KeyG|KeyH|KeyJ|KeyK|KeyL|Semicolon|Quote|Enter|ShiftLeft|KeyZ|KeyX|KeyC|KeyV|KeyB|KeyN|KeyM|Comma|Period|Slash|Backslash|Numpad0|Numpad1|Numpad2|Numpad3|Numpad4|Numpad5|Numpad6|Numpad7|Numpad8|Numpad9|NumpadEnter|NumpadDivide|NumpadAdd|NumpadMultiply|NumpadEqual|NumpadSubtract|NumpadDecimal|NumpadComma|IntlBackslash|ScrollLock|Pause|WakeUp|Escape|RightShift|ControlLeft|AltLeft|Space|AltRight|ContextMenu|MetaLeft|MetaRight|ControlRight|Delete|Insert|BrowserBack|BrowserForward|PageUp|PageDown|ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Home|End|NumLock|VolumeMute|VolumeUp|VolumeDown|MediaTrackNext|MediaPlayPause|MediaTrackPrevious|F1|F2|F3|F4|F5|F6|F7|F8|F9|F10|F11|F12|F13|F14|F15|F16|F17|F18|F19|F20|F21|F22|F23|F24|IntlRo|PrintScreen|PrintScreen|LaunchMail)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "string.kanata"
                }
            }
        },
        {
            "_description": "special keys",
            "match": "(?:^|\\s|[()])(nop[0-9])(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "string.kanata"
                }
            }
        },
        {
            "_description": "aliases starting with @, and variables starting with $",
            "match": "(?:^|\\s|[#()\\]\\[{}-])((?:@|\\$).+?)(?=\\s|[()])",
            "captures": {
                "1": {
                    "name": "variable.parameter.kanata"
                }
            }
        },
        {
            "_description": "output chords",
            "match": "((?:(?:C|A|S|M|RA|AG)-)+[\\S()]+)",
            "captures": {
                "1": {
                    "name": "constant.other.output-chord.kanata"
                }
            }
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.kanata",
                    "begin": "\"",
                    "end": "\""
                },
                {
                    "comment": "rust-style raw strings",
                    "name": "string.quoted.double.kanata",
                    "begin": "(r)(#)(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.byte.raw.kanata"
                        },
                        "2": {
                            "name": "punctuation.definition.string.raw.kanata"
                        },
                        "3": {
                            "name": "punctuation.definition.string.kanata"
                        }
                    },
                    "end": "(\")(\\2)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.string.kanata"
                        },
                        "2": {
                            "name": "punctuation.definition.string.raw.kanata"
                        }
                    }
                }
            ]
        }
    }
}